name: Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [windows-latest]
        node-version: [20.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
    
    - name: Clear npm cache
      run: npm cache clean --force
    
    - name: Remove package-lock and node_modules (Unix)
      run: |
        rm -f package-lock.json
        rm -rf node_modules
      if: matrix.os != 'windows-latest'
    
    - name: Remove package-lock and node_modules (Windows)
      run: |
        if (Test-Path package-lock.json) { Remove-Item package-lock.json -Force }
        if (Test-Path node_modules) { Remove-Item node_modules -Recurse -Force }
      shell: powershell
      if: matrix.os == 'windows-latest'
    
    - name: Install dependencies
      run: npm install --force
    
    - name: Clean rebuild native modules for Node.js
      run: |
        npm run rebuild:clean
        npm run rebuild:node
    
    - name: Run native module diagnostics
      run: npm run check:native -- --verbose
    
    - name: Test database connection
      run: node --input-type=module -e "import Database from 'better-sqlite3'; const db = new Database(':memory:'); db.exec('SELECT 1'); console.log('✅ Database test passed'); db.close();"
    
    - name: Verify better-sqlite3 build artifacts
      run: |
        echo "Checking better-sqlite3 build artifacts:"
        ls -la node_modules/better-sqlite3/build/ || echo "No build directory found"
        ls -la node_modules/better-sqlite3/prebuilds/ || echo "No prebuilds directory found"
    
    - name: Build application
      run: npm run build
    
    - name: Test database connection
      run: node -e "console.log('✅ Database test skipped in CI')"

  build-electron:
    needs: test
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm install
    
    - name: Clean and rebuild native modules for Electron
      run: |
        npm run rebuild:clean
        npm run rebuild:electron
    
    - name: Verify Electron native modules
      run: |
        echo "Checking better-sqlite3 Electron build:"
        ls -la node_modules/better-sqlite3/build/Release/ || echo "No Release build found"
        node --version
        npx electron --version
    
    - name: Build Electron app
      run: npm run electron:build
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: electron-app-${{ matrix.os }}
        path: release/
        
    - name: Create Release
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          release/*.exe
          release/*.exe.blockmap
          release/*.dmg
          release/*.dmg.blockmap
          release/*.AppImage
          release/*.deb
          release/*.rpm
          release/*.tar.gz
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
